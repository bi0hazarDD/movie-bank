//plugins {
//    id 'com.android.application'
//    id 'kotlin-android'
//    id 'kotlin-android-extensions'
//    id 'kotlin-kapt'
//    id "androidx.navigation.safeargs.kotlin"
//}
//
//android {
//    compileSdk 32
//
//    defaultConfig {
//        applicationId "com.example.w1758229_assignment_2"
//        minSdk 26
//        targetSdk 32
//        versionCode 1
//        versionName "1.0"
//
//        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
//    }
//
//    buildTypes {
//        release {
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//        }
//    }
//
//    buildFeatures { //added this in
//        viewBinding = true
//    }
//
//    compileOptions {
//        sourceCompatibility JavaVersion.VERSION_1_8
//        targetCompatibility JavaVersion.VERSION_1_8
//    }
//    kotlinOptions {
//        jvmTarget = '1.8'
//    }
//}
//
//dependencies {
//
//    implementation 'androidx.core:core-ktx:1.7.0'
//    implementation 'androidx.appcompat:appcompat:1.4.1'
//    implementation 'com.google.android.material:material:1.5.0'
//    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
//    testImplementation 'junit:junit:4.+'
//    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
//    // Navigation Component
//    implementation 'androidx.navigation:navigation-fragment-ktx:2.2.2'
//    implementation 'androidx.navigation:navigation-ui-ktx:2.2.2'
//
//    // Room components
//    implementation "androidx.room:room-runtime:2.2.5"
//    kapt "androidx.room:room-compiler:2.2.5"
//    implementation "androidx.room:room-ktx:2.2.5"
//    androidTestImplementation "androidx.room:room-testing:2.2.5"
//
//    // Lifecycle components
//    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
//    implementation "androidx.lifecycle:lifecycle-common-java8:2.2.0"
//    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
//
//    // Kotlin components
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.72"
//    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.5"
//    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.5"
//}
plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'

}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.tutorial07_roomlibrarydb"
        minSdk 28
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation("androidx.room:room-runtime:2.4.2")
    annotationProcessor("androidx.room:room-compiler:2.4.2")
// To use Kotlin annotation processing tool (kapt)
    kapt("androidx.room:room-compiler:2.4.2")
// optional - Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:2.4.2")
    // lifecycle coroutine
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:2.4.0")
    implementation ("androidx.recyclerview:recyclerview:1.3.0-alpha01")

}